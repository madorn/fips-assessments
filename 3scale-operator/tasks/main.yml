---
- name: Setting Up Results Var
  ansible.builtin.set_fact:
    test_results: []
- name: Create Secret in target_namespace
  block:
    - name: Create s3 bucket for 3Scale API Management
      amazon.aws.s3_bucket:
        name: 3scale-bucket
        access_key: "{{ aws_access_key_id }}"
        secret_key: "{{ aws_secret_access_key }}"
        region: "{{ aws_region }}"
        state: present
    - name: Create Secret in target_namespace
      kubernetes.core.k8s:
        state: present
        namespace: "{{ target_namespace }}"
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: aws-auth
          stringData:
            AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
            AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
            AWS_BUCKET: 3scale-bucket
            AWS_REGION: "{{ aws_region }}"
          type: Opaque
    - name: Create APIManager in target_namespace
      kubernetes.core.k8s:
        state: present
        namespace: "{{ target_namespace }}"
        definition:
          apiVersion: apps.3scale.net/v1alpha1
          kind: APIManager
          metadata:
            name: apimanager-sample
          spec:
            wildcardDomain: "3scale.{{ cluster_base_url }}"
            system:
              fileStorage:
                simpleStorageService:
                  configurationSecretRef:
                    name: aws-auth
        wait: true
        wait_condition:
          status: "True"
          type: "Available"
        # Usually the APIManager takes 2-3min to get the True status.
        wait_timeout: 240
      register: result
      failed_when: result.resources[0] is not defined
    - name: Create Secret in target_namespace for APICast
      kubernetes.core.k8s:
        state: present
        namespace: "{{ target_namespace }}"
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: 3scaleportal
          stringData:
            AdminPortalURL: "https://access-token@3scale-admin.3scale.{{ cluster_base_url }}"
          type: Opaque
  rescue:
    - name: Print when failed
      ansible.builtin.debug:
        msg: "3Scale API Management failed. Err: {{ ansible_failed_result }}"
    - name: Adding result to list
      ansible.builtin.set_fact:
        test_results: "{{ test_results + [false] }}"

- name: Create APICast
  block:
    - name: Create APICast in target_namespace
      kubernetes.core.k8s:
        state: present
        namespace: "{{ target_namespace }}"
        definition:
          apiVersion: apps.3scale.net/v1alpha1
          kind: APIcast
          metadata:
            name: apicast-staging
          spec:
            deploymentEnvironment: staging
            configurationLoadMode: lazy
            adminPortalCredentialsRef:
              name: 3scaleportal
      failed_when: result.resources[0] is not defined
    - name: Check connectivity with the APICast service
      ansible.builtin.uri:
        url: http://apicast-apicast-staging:8080
      register: result
  rescue:
    - name: Print when failed
      ansible.builtin.debug:
        msg: "3Scale API Cast failed. Err: {{ ansible_failed_result }}"
    - name: Adding result to list
      ansible.builtin.set_fact:
        test_results: "{{ test_results + [false] }}"

- name: Create result
  ansible.builtin.set_fact:
    assessment_result: "{{ 'pass' if (test_results is all) else 'fail' }}"
# Cleanup tasks
- name: Clean up operand APIManager
  kubernetes.core.k8s:
    state: absent
    api_version: apps.3scale.net/v1alpha1
    kind: APIManager
    name: apimanager-sample
    namespace: "{{ target_namespace }}"
    wait: true
    wait_timeout: 60
    wait_sleep: 5
- name: Clean up secret
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Secret
    name: aws-auth
    namespace: "{{ target_namespace }}"
    wait: true
    wait_timeout: 60
    wait_sleep: 5
- name: Clean up APICast
  kubernetes.core.k8s:
    state: absent
    api_version: apps.3scale.net/v1alpha1
    kind: APIcast
    name: apicast-staging
    namespace: "{{ target_namespace }}"
    wait: true
    wait_timeout: 60
    wait_sleep: 5
- name: Clean up secret
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Secret
    name: 3scaleportal
    namespace: "{{ target_namespace }}"
    wait: true
    wait_timeout: 60
    wait_sleep: 5
- name: Create s3 bucket for 3Scale API Management
  amazon.aws.s3_bucket:
    name: 3scalebucket
    state: absent
